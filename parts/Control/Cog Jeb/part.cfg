PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = CogJeb
module = Part
author = Kerb-fu

// --- asset parameters ---

//mesh = model.mu
scale = .1
rescaleFactor = 0.625 

MODEL
{
	model = Kerb-fu/parts/models/CogJeb
	texture = textures.png , Kerb-fu/parts/models/textures.png
	texture = 2634-normal_NRM.png , Kerb-fu/parts/models/2634-normal_NRM.png
	scale = 1 , 1 , 1
}

iconCenter = 0, 3, 0

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_attach = 0.0, 0.0, 2.5, 0.0, 0.0, -1.0

// --- FX definitions ---


// --- editor parameters ---
TechRequired = flightControl
entryCost = 1000
cost = 3000
category = Control
subcategory = 0
title = Cog Jeb
manufacturer = Professor Kerbenstein's wonderous vertical propulsion emporium.
description = Astounded by the way Jebediah instinctively pilots craft apparently without using his brain, the professor combined flywheel, springs, cogs and pure denial of physics to produce this wonderous contraption, an autonymous motion planning and guidance difference engine.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1

// --- standard part parameters ---
mass = 0.001
dragModelType = default
maximum_drag = 0
minimum_drag = 0
angularDrag = 0
crashTolerance = 24
maxTemp = 3000
PhysicsSignificance = 1
bulkheadProfiles = srf

MODULE
    
{
        
	name = ModuleCommand
        
	minimumCrew = 0
 
       
        
	RESOURCE
        
	{
            
		name = ElectricCharge
            
		rate = 0.005
        
	}
 
   
}

  

MODULE
    
{
        
	name = MechJebCore
}

RESOURCE
    
{
        
		name = ElectricCharge
        
		amount = 5
        
		maxAmount = 5
    
}


MODULE
{
	name = KASModuleGrab
	evaPartPos = (0.0, 0.15, -0.1)
	evaPartDir = (0,0,-1)
	attachOnEva = true
	attachOnPart = true
	storable = true
	storedSize = 14
	bayType = hookBay
	bayNode = top
	bayRot = (0.0, 0.0, 0.0)
}

}
